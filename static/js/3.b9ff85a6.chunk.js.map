{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/cast/Cast.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","state","castInfo","services","getCast","this","props","match","params","movieId","then","cast","setState","queryPages","data","total_results","shortCast","slice","map","id","name","className","src","profile_path","alt","Component"],"mappings":"iGAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,EAjCT,mC,mHCGMQ,E,2MACJC,MAAQ,CACNC,SAAU,I,mFAES,IAAD,OAClBC,IACGC,QAAQC,KAAKC,MAAMC,MAAMC,OAAOC,SAChCC,MAAK,SAAAC,GAAI,OAAI,EAAKC,SAAS,CAAEV,SAAUS,EAAKE,WAAWF,EAAKG,KAAKC,qB,+BAE5D,IACAJ,EADD,eACeN,KAAKJ,MAAMC,SAASY,MAAlCH,KACFK,EAAYL,GAAQA,EAAKM,MAAM,CAAC,GAAI,CAAC,IAC3C,OACE,oCACE,oCACyB,IAAxBZ,KAAKJ,MAAMY,YACV,2DAEF,4BACGG,GACCA,EAAUE,KAAI,SAAAP,GAAI,OAChB,wBAAItC,IAAKsC,EAAKQ,IACZ,2BAAIR,EAAKS,MACT,yBACEC,UAAU,UACVC,IAAG,6CAAwCX,EAAKY,cAChDC,IAAI,sB,GA1BHC,aAmCJzB","file":"static/js/3.b9ff85a6.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { Component } from \"react\";\r\nimport services from \"../services\";\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    castInfo: []\r\n  };\r\n  componentDidMount() {\r\n    services\r\n      .getCast(this.props.match.params.movieId)\r\n      .then(cast => this.setState({ castInfo: cast,queryPages:cast.data.total_results }));\r\n  }\r\n  render() {\r\n    const { cast } = { ...this.state.castInfo.data };\r\n    const shortCast = cast && cast.slice([0], [5]);\r\n    return (\r\n      <>\r\n        <h2>Cast</h2>\r\n        {this.state.queryPages===0&& (\r\n          <h2>Sorry,Rewiews was not found</h2>\r\n        )}\r\n        <ul>\r\n          {shortCast &&\r\n            shortCast.map(cast => (\r\n              <li key={cast.id}>\r\n                <p>{cast.name}</p>\r\n                <img\r\n                  className=\"CastImg\"\r\n                  src={`https://image.tmdb.org/t/p/original${cast.profile_path}`}\r\n                  alt=\"olololo\"\r\n                />\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Cast;\r\n"],"sourceRoot":""}